---
const navLinks = [
  {
    title: "Home",
    url: "#home",
  },
  {
    title: "My Skills",
    url: "#my-skills",
  },
  {
    title: "Work Experience",
    url: "#work-experience",
  },
  {
    title: "Why me?",
    url: "#why-me",
  },
  {
    title: "Portfolio",
    url: "#portfolio",
  },
  {
    title: "Contact",
    url: "#contact",
  },
  {
    title: "GitHub",
    url: "https://github.com/alex2323official",
  },
];
---

<!-- Header Desktop -->
<header class="header-desktop">
  <div class="header__container">
    <p class="header__logo">Alex Boczek</p>
    <nav class="header__nav">
      <ul class="header__nav-ul">
        {
          navLinks.map((item) => (
            <li class="header__nav-li">
              <a class="header__nav-a" href={item.url}>
                {item.title}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>

<!-- Header Mobile -->
<header class="header-mobile">
  <div id="hamburger-switch" class="header-mobile__hamburger">===</div>
  <div id="hamburger-menu" class="header-mobile__container">
    <p class="header-mobile__logo">Alex Boczek</p>
    <nav class="header-mobile__nav">
      <ul class="header-mobile__nav-ul">
        {
          navLinks.map((item) => (
            <li class="header-mobile__nav-li">
              <a class="header-mobile__nav-a" href={item.url}>
                {item.title}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>

<style lang="scss">
  @import "../styles/variables.scss";

  // Header Mobile
  .header-mobile {
    display: none;
    width: 100%;
    @media (max-width: 1024px) {
      display: flex;
    }

    .header-mobile__hamburger {
      position: fixed;
      z-index: 10;
      right: 2rem;
      top: 2rem;
    }

    &__container {
      background-color: $color-blue-medium;
      width: 100vw;
      height: 100vh;
      position: fixed;
      display: none;
      z-index: 8;
      .header-mobile__logo {
      }
      .header-mobile__nav {
        ul {
          li {
            a {
            }
          }
        }
      }
    }
  }

  // Header Desktop
  .header-desktop {
    max-width: 1170px;
    width: 100%;
    margin-top: 3.125rem; // 50px

    @media (max-width: 1024px) {
      display: none;
    }

    .header__container {
      display: flex;
      align-items: center;
      .header__logo {
        font-size: $fontsize-text-18px;
        font-weight: 800;
        text-transform: uppercase;
        margin-right: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 0 !important;
      }
      .header__nav {
        .header__nav-ul {
          display: flex;
          align-items: center;
          list-style: none;
          .header__nav-li {
            margin-right: 2.5rem;
            .header__nav-a {
              color: $color-white;
              font-size: $fontsize-text-18px;
              font-weight: 500;
              text-decoration: none;
            }

            .header__nav-a:last-of-type {
              color: $color-white;
            }
            .header__nav-a:hover {
              text-decoration: underline;
            }
          }
          .header__nav-li:last-of-type {
            margin-right: 0rem;

            padding: 15px 30px;
            border: 1px solid transparent; /* Set a transparent border */
            border-radius: 0px;
            border-image: linear-gradient(
                to right,
                $color-purple,
                $color-orange
              )
              1;

            &:hover {
              background: $main-gradient;
            }
          }
        }
      }
    }
  }
</style>

<script>
  //  Add to GitHub link taget="_blank" with JS
  const gitHubLink = document.querySelector(".header__nav-li:last-of-type a");
  gitHubLink.setAttribute("target", "_blank");

  // Hambuger menu
  const hamburgerSwitcher = document.querySelector("#hamburger-switch");
  const hamburgerMenu = document.querySelector(".header-mobile__container");

  hamburgerMenu.style.display = "none";

  hamburgerSwitcher.addEventListener("click", (event) => {
    if (hamburgerMenu.style.display === "none") {
      hamburgerMenu.style.display = "flex";
    } else {
      hamburgerMenu.style.display = "none";
    }
  });
</script>
